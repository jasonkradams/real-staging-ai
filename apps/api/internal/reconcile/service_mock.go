// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package reconcile

import (
	"context"
	"sync"
)

// Ensure, that ServiceMock does implement Service.
// If this is not the case, regenerate this file with moq.
var _ Service = &ServiceMock{}

// ServiceMock is a mock implementation of Service.
//
//	func TestSomethingThatUsesService(t *testing.T) {
//
//		// make and configure a mocked Service
//		mockedService := &ServiceMock{
//			ReconcileImagesFunc: func(ctx context.Context, opts ReconcileOptions) (*ReconcileResult, error) {
//				panic("mock out the ReconcileImages method")
//			},
//		}
//
//		// use mockedService in code that requires Service
//		// and then make assertions.
//
//	}
type ServiceMock struct {
	// ReconcileImagesFunc mocks the ReconcileImages method.
	ReconcileImagesFunc func(ctx context.Context, opts ReconcileOptions) (*ReconcileResult, error)

	// calls tracks calls to the methods.
	calls struct {
		// ReconcileImages holds details about calls to the ReconcileImages method.
		ReconcileImages []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// Opts is the opts argument value.
			Opts ReconcileOptions
		}
	}
	lockReconcileImages sync.RWMutex
}

// ReconcileImages calls ReconcileImagesFunc.
func (mock *ServiceMock) ReconcileImages(ctx context.Context, opts ReconcileOptions) (*ReconcileResult, error) {
	if mock.ReconcileImagesFunc == nil {
		panic("ServiceMock.ReconcileImagesFunc: method is nil but Service.ReconcileImages was just called")
	}
	callInfo := struct {
		Ctx  context.Context
		Opts ReconcileOptions
	}{
		Ctx:  ctx,
		Opts: opts,
	}
	mock.lockReconcileImages.Lock()
	mock.calls.ReconcileImages = append(mock.calls.ReconcileImages, callInfo)
	mock.lockReconcileImages.Unlock()
	return mock.ReconcileImagesFunc(ctx, opts)
}

// ReconcileImagesCalls gets all the calls that were made to ReconcileImages.
// Check the length with:
//
//	len(mockedService.ReconcileImagesCalls())
func (mock *ServiceMock) ReconcileImagesCalls() []struct {
	Ctx  context.Context
	Opts ReconcileOptions
} {
	var calls []struct {
		Ctx  context.Context
		Opts ReconcileOptions
	}
	mock.lockReconcileImages.RLock()
	calls = mock.calls.ReconcileImages
	mock.lockReconcileImages.RUnlock()
	return calls
}

// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package queries

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

type Querier interface {
	CountProjectsByUserID(ctx context.Context, userID pgtype.UUID) (int64, error)
	CountUsers(ctx context.Context) (int64, error)
	CreateProject(ctx context.Context, arg CreateProjectParams) (*CreateProjectRow, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (*User, error)
	DeleteProject(ctx context.Context, id pgtype.UUID) error
	DeleteProjectByUserID(ctx context.Context, arg DeleteProjectByUserIDParams) error
	DeleteUser(ctx context.Context, id pgtype.UUID) error
	GetAllProjects(ctx context.Context) ([]*GetAllProjectsRow, error)
	GetProjectByID(ctx context.Context, id pgtype.UUID) (*GetProjectByIDRow, error)
	GetProjectsByUserID(ctx context.Context, userID pgtype.UUID) ([]*GetProjectsByUserIDRow, error)
	GetUserByAuth0Sub(ctx context.Context, auth0Sub string) (*User, error)
	GetUserByID(ctx context.Context, id pgtype.UUID) (*User, error)
	GetUserByStripeCustomerID(ctx context.Context, stripeCustomerID pgtype.Text) (*User, error)
	ListUsers(ctx context.Context, arg ListUsersParams) ([]*User, error)
	UpdateProject(ctx context.Context, arg UpdateProjectParams) (*UpdateProjectRow, error)
	UpdateProjectByUserID(ctx context.Context, arg UpdateProjectByUserIDParams) (*UpdateProjectByUserIDRow, error)
	UpdateUserRole(ctx context.Context, arg UpdateUserRoleParams) (*User, error)
	UpdateUserStripeCustomerID(ctx context.Context, arg UpdateUserStripeCustomerIDParams) (*User, error)
}

var _ Querier = (*Queries)(nil)

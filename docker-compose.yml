services:
  postgres:
    image: postgres:17.6
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: virtualstaging
    ports: ["5432:5432"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  redis:
    image: redis:8.2
    ports: ["6379:6379"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports: ["9000:9000", "9001:9001"]
    volumes:
      - minio-data:/data
  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    environment:
      - APP_ENV=dev
      - CONFIG_DIR=/config
    volumes:
      - ./config:/config:ro
      - ./apps/api/secrets.yml:/app/secrets.yml:ro
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_started
    ports: ["8080:8080"]
  worker:
    build:
      context: .
      dockerfile: apps/worker/Dockerfile
    environment:
      - APP_ENV=dev
      - CONFIG_DIR=/config
    volumes:
      - ./config:/config:ro
      - ./apps/worker/secrets.yml:/app/secrets.yml:ro
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_started
  otel:
    image: otel/opentelemetry-collector:0.133.0
    command: ["--config=/etc/otelcol-config.yaml"]
    volumes:
      - ./infra/otelcol.yaml:/etc/otelcol-config.yaml
    ports: ["4317:4317", "4318:4318"]
  migrate:
    image: migrate/migrate
    volumes:
      - ./infra/migrations:/migrations
    working_dir: /migrations
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  minio-data:

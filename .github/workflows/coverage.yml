name: Coverage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25.x'
          check-latest: true

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Generate API coverage (excluding mocks)
        working-directory: apps/api
        run: |
          APP_ENV=../../config go test -timeout 30s -coverprofile=coverage.tmp.out -covermode=atomic ./...
          cat coverage.tmp.out | grep -v _mock.go > coverage.out
          rm coverage.tmp.out

      - name: Generate Worker coverage (excluding mocks)
        working-directory: apps/worker
        run: |
          APP_ENV=../../config go test -timeout 60s -coverprofile=coverage.tmp.out -covermode=atomic ./...
          cat coverage.tmp.out | grep -v _mock.go > coverage.out
          rm coverage.tmp.out

      - name: Upload API coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./apps/api/coverage.out
          flags: api
          name: api-coverage
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false

      - name: Upload Worker coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./apps/worker/coverage.out
          flags: worker
          name: worker-coverage
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false

      - name: Generate coverage summary
        run: |
          echo "## Coverage Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### API Coverage" >> $GITHUB_STEP_SUMMARY
          cd apps/api && go tool cover -func=coverage.out | tail -1 >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Worker Coverage" >> $GITHUB_STEP_SUMMARY
          cd ../worker && go tool cover -func=coverage.out | tail -1 >> $GITHUB_STEP_SUMMARY

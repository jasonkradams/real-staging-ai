name: CI

on:
  push:
    branches: [ main, p1-bootstrap-frontend ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      run_integration_tests:
        description: "Run integration tests (docker-compose.test)"
        type: boolean
        required: false
        default: false
      run_e2e_upload_ready:
        description: "Enable E2E presign→upload→image→SSE happy-path (RUN_E2E_UPLOAD_READY=1)"
        type: boolean
        required: false
        default: false
  schedule:
    - cron: '0 8 * * *'

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: [api, worker]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25.x'
          check-latest: true

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build ${{ matrix.module }}
        working-directory: apps/${{ matrix.module }}
        run: go build ./...

      - name: Run unit tests (${{ matrix.module }})
        working-directory: apps/${{ matrix.module }}
        run: go test -timeout 60s ./...

  docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate OpenAPI spec
        run: make docs

  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: [api, worker]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run golangci-lint (${{ matrix.module }})
        run: |
          docker run --rm -v ${{ github.workspace }}:/app -w /app/apps/${{ matrix.module }} golangci/golangci-lint:v2.4.0-alpine golangci-lint run

  lint_web:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'
          cache-dependency-path: apps/web/package-lock.json
      - name: Install deps (web)
        working-directory: apps/web
        run: npm ci
      - name: Run ESLint (web)
        working-directory: apps/web
        run: npm run lint

  integration:
    if: ${{ (github.event_name == 'workflow_dispatch' && (inputs.run_integration_tests == true || inputs.run_e2e_upload_ready == true)) || github.event_name == 'schedule' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25.x'
          check-latest: true

      - name: Run integration tests (docker compose)
        run: |
          # Optionally enable E2E happy-path test via workflow_dispatch input
          if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ "${{ inputs.run_e2e_upload_ready }}" = "true" ]; then
            export RUN_E2E_UPLOAD_READY=1
          fi
          make test-integration

